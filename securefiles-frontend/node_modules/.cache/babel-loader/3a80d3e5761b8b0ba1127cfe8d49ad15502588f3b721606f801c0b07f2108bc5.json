{"ast":null,"code":"var _jsxFileName = \"/Users/madlnu/scaas/opensource/secure-file-sharing/securefiles-frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [mfaToken, setMfaToken] = useState('');\n  const [mfaRequired, setMfaRequired] = useState(false);\n  const dispatch = useDispatch();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await dispatch(login(username, password, mfaToken));\n    if (result.payload && result.payload.mfa_required) {\n      setMfaRequired(true);\n      navigate('/fileupload'); // Redirect on successful login\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), mfaRequired && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: mfaToken,\n      onChange: e => setMfaToken(e.target.value),\n      placeholder: \"MFA Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"i1c/7/Osc7IBIvJQ+T9jwtWyLnE=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useDispatch","useNavigate","login","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","mfaToken","setMfaToken","mfaRequired","setMfaRequired","dispatch","handleSubmit","e","preventDefault","result","payload","mfa_required","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/madlnu/scaas/opensource/secure-file-sharing/securefiles-frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from '../actions/auth';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [mfaToken, setMfaToken] = useState('');\n  const [mfaRequired, setMfaRequired] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const result = await dispatch(login(username, password, mfaToken));\n    if (result.payload && result.payload.mfa_required) {\n      setMfaRequired(true);\n      \n      navigate('/fileupload'); // Redirect on successful login\n    }\n    \n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\n      <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\n      {mfaRequired && <input type=\"text\" value={mfaToken} onChange={e => setMfaToken(e.target.value)} placeholder=\"MFA Token\" />}\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACd,KAAK,CAACM,QAAQ,EAAEE,QAAQ,EAAEE,QAAQ,CAAC,CAAC;IAClE,IAAIQ,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACC,YAAY,EAAE;MACjDP,cAAc,CAAC,IAAI,CAAC;MAEpBR,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3B;EAEF,CAAC;EAED,oBACEH,OAAA;IAAMmB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElB,QAAS;MAACmB,QAAQ,EAAET,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzG7B,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEhB,QAAS;MAACiB,QAAQ,EAAET,CAAC,IAAIP,WAAW,CAACO,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5GnB,WAAW,iBAAIV,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,QAAS;MAACe,QAAQ,EAAET,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1H7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA3BID,KAAK;EAAA,QACQJ,WAAW,EAKXD,WAAW;AAAA;AAAAkC,EAAA,GANxB7B,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}