{"ast":null,"code":"var _jsxFileName = \"/Users/madlnu/scaas/opensource/secure-file-sharing/securefiles-frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleFileUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = async e => {\n      const encryptedContent = CryptoJS.AES.encrypt(e.target.result, 'encryption_key').toString();\n      const formData = new FormData();\n      formData.append('file_name', file.name);\n      formData.append('encrypted_content', encryptedContent);\n      await axios.post('/api/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFileUpload,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","CryptoJS","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","handleFileChange","e","target","files","handleFileUpload","preventDefault","reader","FileReader","onload","encryptedContent","AES","encrypt","result","toString","formData","FormData","append","name","post","headers","readAsDataURL","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/madlnu/scaas/opensource/secure-file-sharing/securefiles-frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport CryptoJS from 'crypto-js';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleFileUpload = async (e) => {\n    e.preventDefault();\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const encryptedContent = CryptoJS.AES.encrypt(e.target.result, 'encryption_key').toString();\n      const formData = new FormData();\n      formData.append('file_name', file.name);\n      formData.append('encrypted_content', encryptedContent);\n      await axios.post('/api/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <form onSubmit={handleFileUpload}>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button type=\"submit\">Upload</button>\n    </form>\n  );\n};\n\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOH,CAAC,IAAK;IACpCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACP,IAAI,EAAE;IAEX,MAAMQ,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAOP,CAAC,IAAK;MAC3B,MAAMQ,gBAAgB,GAAGhB,QAAQ,CAACiB,GAAG,CAACC,OAAO,CAACV,CAAC,CAACC,MAAM,CAACU,MAAM,EAAE,gBAAgB,CAAC,CAACC,QAAQ,CAAC,CAAC;MAC3F,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAElB,IAAI,CAACmB,IAAI,CAAC;MACvCH,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAEP,gBAAgB,CAAC;MACtD,MAAMjB,KAAK,CAAC0B,IAAI,CAAC,cAAc,EAAEJ,QAAQ,EAAE;QACzCK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;IACJ,CAAC;IACDb,MAAM,CAACc,aAAa,CAACtB,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEH,OAAA;IAAM0B,QAAQ,EAAEjB,gBAAiB;IAAAkB,QAAA,gBAC/B3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDjC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CAhCID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}